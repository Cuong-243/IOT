    <div id="menu_" >
        <a href="http://localhost:3000/trang_chu" onclick="homeFunction()"><i class="fas fa-home"></i></a>
        <a href="http://localhost:3000/lichsu" onclick="searchFunction()"><i class="fas fa-history history-icon"></i></a>
        <a href="http://localhost:3000/data" onclick="settingsFunction()">  <i class="fas fa-database data-icon"></i></a>
        <a href="http://localhost:3000/hoso" onclick="userFunction()"><i class="fas fa-user"></i></a>
    </div>

    <div id= "thong_so_" >
        <div class="parameter">
            <i id="temperature-icon" class="fas fa-thermometer-half"></i>
            <span>Temperature: <span id="temperature-value">30</span>°C</span>
        </div>
        <div class="parameter">
            <i id="humidity-icon" class="fas fa-tint"></i>
            <span>Humidity: <span id="humidity-value">60</span>%</span>
        </div>
        <div class="parameter parameter_light">
            <i id="smog-icon" class="fas fa-smog dust-icon"></i>
            <span>Device 4: <span id="smog-value">5 </span> m/s</span>
        </div>
        <div class="parameter">
            <i id="light-icon" class="fas fa-sun"></i>
            <span>Light : <span id="light-value">5</span></span>
        </div>
    </div>

<script>
    const colorRange = [
        "#0000FF", // 0 - 50 (Xanh dương)
        "#0033FF", // 50 - 100 (Xanh dương đậm hơn)
        "#0066FF", // 100 - 150 (Xanh da trời)
        "#0099FF", // 150 - 200 (Xanh nhạt)
        "#00CCFF", // 200 - 250 (Xanh lơ)
        "#00FFFF", // 250 - 300 (Xanh ngọc)
        "#33FF99", // 300 - 350 (Xanh lục nhạt)
        "#66FF66", // 350 - 400 (Xanh lá cây)
        "#99FF33", // 400 - 450 (Xanh lá chuối)
        "#CCFF00", // 450 - 500 (Vàng lục)
        "#FFFF00", // 500 - 550 (Vàng)
        "#FFCC00", // 550 - 600 (Vàng cam)
        "#FF9900", // 600 - 650 (Cam)
        "#FF6600", // 650 - 700 (Cam đậm)
        "#FF3300", // 700 - 750 (Đỏ cam)
        "#FF0000", // 750 - 800 (Đỏ)
        "#CC0000", // 800 - 850 (Đỏ đậm)
        "#990000", // 850 - 900 (Đỏ thẫm)
        "#660000", // 900 - 950 (Nâu đỏ)
        "#330000"  // 950 - 1000 (Nâu đậm)
    ];

    // Hàm lấy màu tương ứng với giá trị ánh sáng
    function getColorForLightValue(lightValue) {
        // Giới hạn giá trị ánh sáng trong khoảng từ 0 đến 1000
        if (lightValue < 0) lightValue = 0;
        if (lightValue > 1000) lightValue = 1000;

        // Tính toán chỉ số màu dựa trên mỗi khoảng 50 đơn vị
        const index = Math.floor(lightValue / 50);
        
        // Trả về màu tương ứng từ mảng
        return colorRange[index];
    }

        function updateColor(element) {
            const light = element.light;
            const temperature = element.temperature;
            const humidity = element.humidity;
            const device4 = element.device4;

            document.getElementById("temperature-value").innerText = temperature;
            document.getElementById("humidity-value").innerText = humidity;
            document.getElementById("smog-value").innerText = device4;
            document.getElementById("light-value").innerText = light;

            var HumidityValue = parseInt(document.getElementById("humidity-value").textContent);
            var HumidityIcon = document.getElementById("humidity-icon");
            
            // Thay đổi màu sắc dựa trên giá trị nhiệt độ
            if (HumidityValue <= 30) {
                HumidityIcon.style.color = "blue";
            } else if (HumidityValue > 30 && HumidityValue <= 60) {
                HumidityIcon.style.color = "orange";
            } else {
                HumidityIcon.style.color = "red";
            }
            var lightValue = parseInt(document.getElementById("light-value").textContent);
            var lightIcon = document.getElementById("light-icon");
            
            //Thay đổi màu sắc dựa trên giá trị nhiệt độ
            lightIcon.style.color = getColorForLightValue(lightValue) ;

            var temperatureValue = parseInt(document.getElementById("temperature-value").textContent);
            var temperatureIcon = document.getElementById("temperature-icon");
            
            // Thay đổi màu sắc dựa trên giá trị nhiệt độ
            if (temperatureValue <= 15) {
                temperatureIcon.style.color = "blue";
            } else if (temperatureValue > 15 && temperatureValue <= 30) {
                temperatureIcon.style.color = "orange";
            } else {
                temperatureIcon.style.color = "red";
            }
            var smogValue = parseInt(document.getElementById("smog-value").textContent);
            var smogIcon = document.getElementById("smog-icon");
            
            // Thay đổi màu sắc dựa trên giá trị nhiệt độ
            if (smogValue <= 30) {
                smogIcon.style.color = "blue";
            } else if (smogValue > 30 && smogValue <= 60) {
                smogIcon.style.color = "orange";
            } else {
                smogIcon.style.color = "red";
            }

            // Nhấp nháy thẻ ánh sáng nếu giá trị ánh sáng vượt quá 500
            //const lightDiv = document.querySelector('.parameter_light');
            const smogValue_device4 = document.querySelector('.parameter_light');

            if (smogValue > 70) {
                smogValue_device4.classList.add('red-blink');
            } else {
                smogValue_device4.classList.remove('red-blink');
            }
        }
        // Kết nối WebSocket đến server
        const ws = new WebSocket('ws://localhost:8080');
        ws.onopen = () => {
            console.log('Kết nối WebSocket thành công ở header');
        };
        ws.onmessage = (event) => {
            const data = JSON.parse(event.data);
            //console.log('Nhận dữ liệu từ server:', data);
            updateColor(data)
        };

        ws.onclose = () => {
            console.log('WebSocket đã ngắt kết nối ở header');
        };
        ws.onerror = (error) => {
            console.error('Lỗi WebSocket ở header: ', error);
        };
</script>
<style>   
    /* CSS cho hiệu ứng nhấp nháy */
    .blink {
        animation: blinker 0.5s linear infinite;
    }

    @keyframes blinker {
        50% {
            opacity: 0;
        }
    }
.red-blink {
    animation: red-glow 0.2s ease-in-out infinite;
}

@keyframes red-glow {
    0%, 100% {
        box-shadow: 0 0 5px 0 transparent;
    }
    50% {
        box-shadow: 0 0 20px 10px rgba(255, 0, 0, 0.8);
    }
}

    #menu_{
        width: 100%;
        display: flex;
        justify-content: center;
        background-color: #333;
        padding: 10px 0;
        
    }
    /* Style cho mỗi icon trong#menu */
    #menu_ a {
        margin-left: 30px;
        margin-right: 30px;
        padding: 14px 20px;
        color: white;
        text-align: center;
    }
    /* Style khi di chuột qua icon */
    #menu_ a:hover {
        background-color: #575757;
        border-radius: 4px;
    }
    /* Icon font-awesome */
    #menu_ i {
        font-size: 24px;
    }


    /* Style cho thanh thông số */
    #thong_so_ {
        display: flex;
        justify-content: space-around;
        background-color: rgba(24, 32, 85, 0.422);
        padding: 10px;
        font-family: Arial, sans-serif;
        color: white;
    }
    /* Style cho từng thông số */
    .parameter {
        display: flex;
        align-items: center;
        font-size: 18px;
        padding: 10px;
    }
    /* Style cho icon */
    .parameter i {
        margin-right: 8px;
        font-size: 24px;
    }
</style>